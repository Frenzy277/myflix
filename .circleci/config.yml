version: 2
jobs:
  build:
    working_directory: ~/myflix
    docker:
      - image: circleci/ruby:2.3.6-node-browsers
        environment:
          RAILS_ENV: test
          RACK_ENV: test
          PGHOST: localhost
          PGUSER: postgres
      - image: circleci/postgres:9.6.4
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: myflix_test
    steps:
      - checkout

      # Restore bundle cache
      - restore_cache:
          key: myflix-app-{{ checksum "Gemfile.lock" }}

      # Bundle install dependencies
      - run: bundle install --path vendor/bundle

      # Store bundle cache
      - save_cache:
          key: myflix-app-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      - run:
          name: Database setup
          command: bundle exec rake db:create db:schema:load --trace

      - run:
          name: Create the screenshot artifact directory
          command: mkdir -p /tmp/capybara;

      - run: |
          bundle exec rspec -r rspec_junit_formatter \
                            --format RspecJunitFormatter \
                            --out ~/myflix/tmp/test-results/rspec.xml \
                            --format progress \
                            $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings --timings-type=classname)

      # Save artifacts
      - store_test_results:
          path: ~/myflix/tmp/test-results
      - store_artifacts:
          path: ~/myflix/tmp/test-results
      - store_artifacts:
          path: ~/myflix/tmp/capybara




# dependencies:
#   pre:
#     - gem install bundler
#   post:
#     - wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-5.0.2.tar.gz
#     - tar -xvf elasticsearch-5.0.2.tar.gz
#     - elasticsearch-5.0.2/bin/elasticsearch: {background: true}
#     - sleep 10 && wget --waitretry=5 --retry-connrefused -v http://127.0.0.1:9200/

# machine:
#   ruby:
#     version: 2.3.6
#   environment:
#     DBUS_SESSION_BUS_ADDRESS: /dev/null

# test:
#   override:
#     - bundle exec rspec -r rspec_junit_formatter --format progress --format RspecJunitFormatter --out $CIRCLE_TEST_REPORTS/rspec/junit.xml:
#         parallel: true
#         files:
#           - spec/**/*_spec.rb

# deployment:
#   production:
#     branch: master
#     commands:
#       - heroku maintenance:on --app tt-myflix
#       - heroku pg:backups capture --app tt-myflix
#       - git push git@heroku.com:tt-myflix.git $CIRCLE_SHA1:refs/heads/master
#       - heroku run rake db:migrate --app tt-myflix
#       - heroku run rake elasticsearch:index --app tt-myflix
#       - heroku maintenance:off --app tt-myflix
#   staging:
#     branch: staging
#     commands:
#       - heroku maintenance:on --app tt-staging-myflix
#       - git push git@heroku.com:tt-staging-myflix.git $CIRCLE_SHA1:refs/heads/master
#       - heroku run rake db:migrate --app tt-staging-myflix
#       - heroku run rake elasticsearch:index --app tt-staging-myflix
#       - heroku maintenance:off --app tt-staging-myflix